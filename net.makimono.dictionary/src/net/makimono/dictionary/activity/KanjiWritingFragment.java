package net.makimono.dictionary.activity;

import java.util.ArrayList;
import java.util.List;

import android.content.Intent;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import net.makimono.dictionary.R;
import net.makimono.dictionary.view.KanjiWritingLayout;
import net.makimono.dictionary.view.KanjiWritingView;

public class KanjiWritingFragment extends Fragment {

	private View contentView;
	private KanjiWritingLayout layout;

	@Override
	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
		super.onCreateOptionsMenu(menu, inflater);
		inflater.inflate(R.menu.share, menu);
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		if (super.onOptionsItemSelected(item)) {
			return true;
		} else {
			if (item.getItemId() == R.id.menu_share) {
				View view = this.layout;
				view.setDrawingCacheEnabled(true);
				Bitmap bitmap = Bitmap.createBitmap(view.getDrawingCache());
				view.setDrawingCacheEnabled(false);

				String url = MediaStore.Images.Media.insertImage(getActivity().getContentResolver(), bitmap, getString(R.string.app_name), "Kanji writing");

				Intent shareIntent = new Intent(Intent.ACTION_SEND);
				shareIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
				shareIntent.putExtra(Intent.EXTRA_SUBJECT, "Kanji stroke order diagram generated by Makimono");
				shareIntent.putExtra(Intent.EXTRA_STREAM, Uri.parse(url));
				shareIntent.setType("image/png");
				startActivity(Intent.createChooser(shareIntent, "Share with"));
				return true;
			}
			return false;
		}
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		contentView = inflater.inflate(R.layout.kanji_writing, container, false);
		layout = (KanjiWritingLayout) contentView.findViewById(R.id.kanji_writing);
		return contentView;
	}

	@Override
	public void onStart() {
		super.onStart();

		ArrayList<String> strokePaths = getArguments().getStringArrayList(net.makimono.dictionary.Intent.EXTRA_STROKE_PATHS);
		updateView(strokePaths);
	}

	private void updateView(List<String> strokePaths) {
		layout.removeAllViews();

		for (int i = 0; i < strokePaths.size(); i++) {
			KanjiWritingView kanjiWritingView = new KanjiWritingView(getActivity());
			kanjiWritingView.setStrokePaths(strokePaths);
			kanjiWritingView.setStrokeIndex(i);
			layout.addView(kanjiWritingView);
		}
	}
}
